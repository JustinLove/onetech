name: Update Mapping Files

on:
  workflow_dispatch:
    inputs:
  schedule:
    #         m h   d m w
    - cron: '33 */4 * * *'

jobs:
  test:

    runs-on: ubuntu-latest

    outputs:
      lastversion: ${{ steps.lastversion.outputs.version }}
      dataversion: ${{ steps.dataversion.outputs.version }}

    steps:
    - name: last version download
      run: curl https://onemap.wondible.com/static/dataVersionNumber.txt -o lastVersionNumber.txt
    - name: load version number
      id: lastversion
      run: echo ::set-output name=version::`cat lastVersionNumber.txt`
    - name: checkout data
      uses: actions/checkout@v2
      with:
        repository: jasonrohrer/OneLifeData7
        path: OneLifeData7
    - name: fetch tags
      run: git -C OneLifeData7 fetch origin "+refs/tags/*:refs/tags/*"
    #- name: file report
    #run: ls -R
    - name: get version number
      id: dataversion
      run: echo ::set-output name=version::`git -C OneLifeData7 for-each-ref --sort=-creatordate --format '%(refname:short)' --count=1 refs/tags/OneLife_v* | sed -e 's/OneLife_v//'`
    - name: report
      run: echo "${{ steps.lastversion.outputs.version }} ${{ steps.dataversion.outputs.version }}"

  build:
    needs: test
    if: needs.test.outputs.lastversion != needs.test.outputs.dataversion

    runs-on: ubuntu-latest

    container:
      image:  wondible/onetech-prereqs:s3

    steps:
    - uses: actions/checkout@v2
    - name: Cache node modules
      uses: actions/cache@v2
      with:
        path: process/node_modules
        key: processor-node_modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-processor-node_modules-${{ hashFiles('**/package-lock.json') }}
          ${{ runner.os }}-processor-node_modules-
          processor-node_modules-
    - name: Install dependencies
      run: cd process && npm install
    - name: Make Directories
      run: mkdir -p public/static/sprites && mkdir -p public/static-edge/sprites
    - name: Download static
      run: s3cmd --no-check-certificate --access_key=$ACCESS_KEY --secret_key=$SECRET_KEY --human-readable-sizes --stop-on-error --exclude=*.png --exclude=*/pretty-json/* sync s3://$BUCKET/static public/
      env:
        BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
        SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: copy edge
      run: cp -R public/static/* public/static-edge/
    - name: Process Data
      run: cd process && node process.js download sprites
    - name: record version number
      run: git -C process/OneLifeData7 for-each-ref --sort=-creatordate --format '%(refname:short)' --count=1 refs/tags/OneLife_v* | sed -e 's/OneLife_v//' > public/static/dataVersionNumber.txt
    - name: Upload static
      run: s3cmd --no-check-certificate --access_key=$ACCESS_KEY --secret_key=$SECRET_KEY --human-readable-sizes --stop-on-error --add-header="Cache-Control:max-age=604800" --exclude ../public/static/objects.json --exclude sprite_* sync public/static s3://$BUCKET/
      env:
        BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
        SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Upload static objects.json
      run: s3cmd --no-check-certificate --access_key=$ACCESS_KEY --secret_key=$SECRET_KEY --human-readable-sizes --stop-on-error --add-header="Cache-Control:max-age=86400" sync public/static/objects.json s3://$BUCKET/static/
      env:
        BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
        SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
